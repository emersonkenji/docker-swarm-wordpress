version: "3.7"

services:
  mysql:
    image: mariadb:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 15s
      labels:
        - "traefik.enable=false"
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ROOT_PASSWORD: wordpressroot
    volumes:
      - mysql_data_colorspro:/var/lib/mysql
    networks:
      - nw-backend

  wordpress:
    image: wordpress:6.7.1-php8.3-fpm-alpine
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 15s
      labels:
        - "traefik.enable=false"
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
    depends_on:
      - mysql
    volumes:
      - wp_data_colorspro:/var/www/html
      - ./apps/wordpress/php.ini:/usr/local/etc/php/php.ini
    networks:
      - nw-backend    

  nginx:
    # image: nginx:latest
    build:
      context: .  # O diretório onde está o Dockerfile
      dockerfile: Dockerfile
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 15s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy"
        - "traefik.http.services.nginx.loadbalancer.server.port=80"
        - "traefik.http.routers.nginx.rule=Host(`example.com`)"
        - "traefik.http.routers.nginx.entrypoints=web,websecure"
        - "traefik.http.routers.nginx.tls=true"
        - "traefik.http.routers.nginx.tls.certresolver=le"
    depends_on:
      - wordpress
    volumes:
      - ./apps/nginx/nginx_conf/nginx.conf:/etc/nginx/nginx.conf
      - ./apps/nginx/nginx_conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - wp_data_colorspro:/var/www/html
    networks:
      - nw-backend
      - proxy

volumes:
  wp_data_colorspro:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /data/wp_data_colorspro
  mysql_data_colorspro:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /data/mysql_data_colorspro

networks:
  proxy:
    external: true
  nw-backend:
    external: true
